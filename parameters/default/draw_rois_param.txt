# --- The parameters used to draw ROIs from a strand collection. ---
#
# Please enter parameter names on separate lines (with no preceding space) followed by a single space 
# and then its value. Lines without recognised parameter names in this format will be ignored. 
#
# E.g. 
# name 0.0 		(Remember, NO preceding space and only ONE space between name and value!)
# 
#
# NB: The generated phantom is scale invariant.  All parameters representing spatial quantities are only 
# relative to one another and therefore defined in abstract units (U).
#

num_voxels 100				# Number of voxels along each axis (i.e. x, y, z)

voxel_size 0.02			# (U) Size of voxel along each axis

extra_point_radius 3.0		# (U) Bundle start and end masks are generated by drawing balls around the control points 
						# of their constituent strands (the mask is the union of these balls).  By default 
						# these balls have the same radii as the strands however the parameter 
						# 'extra_point_radius' is added to this radius in order to fill the gaps between strands. 
						# Note that if two balls overlap, the ball which is 'closest' to the voxel is preferred, 
						# where the closeness of a ball is the distance its centre to the voxel divided by the 	
						# ball's radius.

# Masks are specified about the ends of bundles in two ways. Firstly, balls are only drawn around control points that are # of a 'depth' between 'point_depth_l_bound' and point_depth_u_bound', where depth here refers to the number of control 
# points away from the strand beginning or end of the strand. Secondly, the masks are constrained to lie within a 
# spherical shell between 'voxel_radial_l_bound' and 'voxel_radial_u_bound' centred on the origin. 
#
# There is redundancy between both constraints, however they are only intended to be used one at a time. If using a 
# standard spherical phantom I would recommend relying on the 'voxel_radial_...' bounds and set the point_depth_l_bound 
# to 0 and point_depth_u_bound to something that would be usually well within the shell.


point_depth_l_bound 0		# The mask for a given bundle is the union of balls drawn about the mth 
						# control points away from the endpoints of the bundle's constituent 
						# sub-bundles, where m is specified by the 'point_depth' parameter.

point_depth_u_bound 3		# see above.



voxel_radial_l_bound 0.95		# (U) The ROIs can be constrained to lie within a spherical shell specified by
						# the lower and upper bounds, voxel_radial_l_bound and voxel_radial_u_bound 
						# respectively

voxel_radial_u_bound 1.0		# see above.

inclusion_radius 0.8		# Only bundles (or sub-bundles if subbundle_mask is set to 1) that pass through a smaller central sphere wil be given a mask.

null_mask_l_bound 0.98		# The lower bound of the shell in which contains the null mask that wraps the surface of the sphere.

null_mask_u_bound 1.0		# The upper bound of the shell in which contains the null mask that wraps the surface of the sphere. 

subbundle_mask 0		# When set to 1 the masks are drawn for individual subbundles instead of whole bundles.  
						# However, the subbundles from the save bundle are saved over consecutive ROI IDs, the first
						# of each bundle are recorded in a seperate file called 'new_bundle_markers.txt'


